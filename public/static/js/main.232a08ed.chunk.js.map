{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/calendar-messages-es.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseURL","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActive","eventUpdate","eventDelete","eventLoaded","login","user","checkingFinish","logout","useForm","initialState","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","dispatch","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rNombre","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","clear","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minute","second","add","defaultEnd","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","evento","_id","eventStartAddNew","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","eventos","startAccessor","endAccessor","eventPropGetter","stat","idSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","view","selectable","onSelectSlot","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","checking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.232a08ed.chunk.js","sourcesContent":["const baseURL = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const fetchSinToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\nexport const fetchConToken = (endpoint, data, method = 'GET') => {\r\n    const url = `${baseURL}/${endpoint}`;\r\n    const token = localStorage.getItem('token') || '';  //se pone asi en caso de que el token sea null, seguir trabajando con strings\r\n\r\n    if (method === 'GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}","export const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventAddNew: '[event] Add new',\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventSetActive: '[event] Set Active',\r\n    eventClearActive: '[event] Clear Active event',\r\n    eventUpdate: '[event] Update event',\r\n    eventDelete: '[event] Delete event',\r\n    eventLoaded: '[event] Event loaded',\r\n    eventLogout: '[event] Event logout',\r\n\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authLogin: '[auth] Login',\r\n    authStartLogin: '[auth] Start Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import moment from 'moment';\r\n\r\nexport const prepareEvents = (events = []) => {\r\n\r\n    return events.map(e => ({\r\n        ...e,\r\n        end: moment(e.end).toDate(),\r\n        start: moment(e.start).toDate(),\r\n    }));\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                dispatch(eventAddNew(event))\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActive = () => ({\r\n    type: types.eventClearActive\r\n})\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await resp.json();\r\n            if (body.ok)\r\n                dispatch(eventUpdate(event))\r\n            else\r\n                Swal.fire('Error', body.msg, 'error');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nconst eventUpdate = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            const resp = await fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await resp.json();\r\n            if (body.ok)\r\n                dispatch(eventDelete());\r\n            else\r\n                Swal.fire('Error', body.msg, 'error');\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nconst eventDelete = () => ({\r\n    type: types.eventDelete\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            const events = prepareEvents(body.eventos);\r\n            dispatch(eventLoaded(events))\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLogout } from './events';\r\n\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());  //guarda la hora en la que se ha creado el token porque tiene 2h de vida\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\nconst login = (user) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startRegister = (email, password, name) => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchSinToken('auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());  //guarda la hora en la que se ha creado el token porque tiene 2h de vida\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startCheckin = () => {\r\n    return async (dispatch) => {\r\n        const resp = await fetchConToken('auth/renew');\r\n        const body = await resp.json();\r\n\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());  //guarda la hora en la que se ha creado el token porque tiene 2h de vida\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }));\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n            dispatch(checkingFinish());\r\n        }\r\n\r\n    }\r\n}\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return async (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLogout());    //limpia todos los datos de redux\r\n        dispatch(logout());\r\n    }\r\n}\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues(initialState)\r\n    }\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setValues({\r\n            ...values,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    return [values, handleInputChange, reset];\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const [formLoginValues, handleLoginInputChange] = useForm({\r\n        lEmail: 'paco@gmail.com',\r\n        lPassword: '123123'\r\n    });\r\n    const [formRegisterValues, handleRegisterInputChange] = useForm({\r\n        rNombre: 'Adrian',\r\n        rEmail: 'Adrian@gmail.com',\r\n        rPassword1: '123123',\r\n        rPassword2: '123123',\r\n    });\r\n    const { lEmail, lPassword } = formLoginValues;\r\n    const { rEmail, rPassword1, rPassword2, rNombre } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLogin(lEmail, lPassword));\r\n    }\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (rPassword1 !== rPassword2) {\r\n            return Swal.fire('Error', 'Las contraseñas no coinciden', 'error');\r\n        } else {\r\n            dispatch(startRegister(rEmail, rPassword1, rNombre));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"lEmail\"\r\n                                value={lEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={lPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rNombre\"\r\n                                value={rNombre}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Email\"\r\n                                name=\"rEmail\"\r\n                                value={rEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"rPassword1\"\r\n                                value={rPassword1}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"rPassword2\"\r\n                                value={rPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n\r\n\r\n    const handleSalir = () => {\r\n        dispatch(startLogout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n\r\n            <button\r\n                className=\"btn btn-outline-danger\"\r\n                onClick={handleSalir}\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir </span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong> {title} </strong>\r\n            <span>- {user.name} </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nexport const uiOpenModal = () => ({ type: types.uiOpenModal })\r\nexport const uiCloseModal = () => ({ type: types.uiCloseModal })","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActive, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minute(0).second(0).add(1, 'hour');\r\nconst defaultEnd = now.clone().add(1, 'hour');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: defaultEnd.toDate(),\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const { activeEvent } = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(defaultEnd.toDate());\r\n    const [titleValid, setTitleValid] = useState(true);\r\n\r\n    const [formValues, setFormValues] = useState(initEvent)\r\n    const { notes, title, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent)\r\n            setFormValues(activeEvent)\r\n        else\r\n            setFormValues(initEvent)\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    const closeModal = () => {\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActive());\r\n        setFormValues(initEvent);\r\n    }\r\n\r\n    const handleDateStartChange = (e) => {\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n    const handleDateEndChange = (e) => {\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        if (momentStart.isSameOrAfter(momentEnd))\r\n            return Swal.fire('Error', 'La fecha fin debe de ser mayor a la de inicio', 'error');\r\n\r\n        if (title.trim().length < 2)\r\n            return setTitleValid(false);\r\n\r\n\r\n        if (activeEvent) {\r\n            dispatch(eventStartUpdate(formValues));\r\n        } else {\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            // onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n            closeTimeoutMS={200}\r\n        >\r\n\r\n            <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo Evento'} </h1>\r\n            <hr />\r\n            <form\r\n                className=\"container\"\r\n                onSubmit={handleSubmitForm}\r\n            >\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleDateStartChange}\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleDateEndChange}\r\n                        minDate={dateStart}\r\n                        value={dateEnd}\r\n                        className=\"form-control\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOnClick = () => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={handleOnClick}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleOnClick = (e) => {\r\n        e.preventDefault();\r\n        dispatch(eventStartDelete())\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleOnClick}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Borrar evento </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\n\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport 'moment/locale/es';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActive, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\nmoment.locale('es');    //idioma de moment en español\r\nconst localizer = momentLocalizer(moment);\r\n\r\nexport const CalendarScreen = () => {\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClick = (e) => {\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        dispatch(eventSetActive(e));\r\n    }\r\n\r\n    const onViewChange = (e) => {\r\n        setLastView(e)\r\n        localStorage.setItem('lastView', e);\r\n    }\r\n\r\n    const eventStyleGetter = (event, stat, end, idSelected) => {\r\n        const style = {\r\n            backgroundColor: (uid === event.user._id) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return style;\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch(eventClearActive());\r\n    }\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClick}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                view={lastView}\r\n                selectable={true}\r\n                onSelectSlot={onSelectSlot}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            <CalendarModal />\r\n\r\n            {(activeEvent) && <DeleteEventFab />}\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                ( isAuthenticated )\n                    ? ( <Redirect to=\"/\" /> )\n                    : ( <Component { ...props } /> )\n            )}\n        \n        />\n    )\n}\n\nPublicRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Route, Redirect } from 'react-router-dom';\n\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? (<Component {...props} />)\n                    : (<Redirect to=\"/login\" />)\n            )}\n\n        />\n    )\n}\n\nPrivateRoute.propTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { startCheckin } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nexport const AppRouter = () => {\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth)\r\n\r\n    useEffect(() => {\r\n        dispatch(startCheckin());\r\n    }, [dispatch]);\r\n\r\n    if (checking)\r\n        return (<h5>Cargando...</h5>);\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute\r\n                        exact\r\n                        path=\"/login\"\r\n                        component={LoginScreen}\r\n                        isAuthenticated={!!uid} // !! devuelve falso si uid=null y true si uid es correcto\r\n                    />\r\n                    <PrivateRoute\r\n                        exact\r\n                        path=\"/\"\r\n                        component={CalendarScreen}\r\n                        isAuthenticated={!!uid}\r\n                    />\r\n\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import { types } from '../types/types';\r\n\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n        case types.authCheckingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n        case types.authLogout:\r\n            return {\r\n                checking: false,\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\n// {\r\n//     id: new Date().getTime(),\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(),\r\n//     end: moment().add(2, 'hours').toDate(),\r\n//     notes: 'Comprar el pastel',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Adrian'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null,\r\n}\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [action.payload, ...state.events]\r\n            };\r\n\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            };\r\n\r\n        case types.eventClearActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            };\r\n\r\n        case types.eventDelete:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            };\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            };\r\n\r\n        case types.eventLogout:\r\n            return {\r\n                ...initialState\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false\r\n}\r\n\r\nexport const uiReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        case types.uiCloseModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\n\r\nimport { uiReducer } from './uiReducer';\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n)\r\n\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { AppRouter } from './routers/AppRouter'\r\nimport { store } from './store/store';\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={store}>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css';\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}